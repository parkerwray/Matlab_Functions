function out_data = channel_map_all_15MHz(data)
% CHANNEL_MAP
% Map the after-pre-amp, 512-channel data array to the correct order.
%
% Due to pre-amp board design flaw, the channel order after the pre-amp
% modules are incorrect. This function is designed to put them in the
% correct order, based on empirically determined order. This function
% works on the entire 512 channel data array.
  daq_id = [64 96 97 34 2 35 99 67 68 100 101 38 6 39 103 71 72 104 105 42 10 ...
            43 107 75 76 108 109 46 14 47 111 79 112 80 18 50 113 83 115 51 ...
            116 84 22 54 117 87 119 55 120 88 26 58 121 91 123 59 124 92 30 ...
            62 125 95 127 63 192 224 225 162 130 163 227 195 196 228 229 166 ...
            134 167 231 199 200 232 233 170 138 171 235 203 204 236 237 174 ...
            142 175 239 207 240 208 146 178 241 211 243 179 244 212 150 182 ...
            245 215 247 183 248 216 154 186 249 219 251 187 252 220 158 190 ...
            253 223 255 191 32 0 65 33 1 3 98 66 36 4 69 37 5 7 102 70 40 8 ...
            73 41 9 11 106 74 44 12 77 45 13 15 110 78 16 48 17 49 81 82 114 ...
            19 20 52 21 53 85 86 118 23 24 56 25 57 89 90 122 27 28 60 29 61 ...
            93 94 126 31 160 128 193 161 129 131 226 194 164 132 197 165 133 ...
            135 230 198 168 136 201 169 137 139 234 202 172 140 205 173 141 ...
            143 238 206 144 176 145 177 209 210 242 147 148 180 149 181 213 ...
            214 246 151 152 184 153 185 217 218 250 155 156 188 157 189 221 ...
            222 254 159 416 384 449 417 385 387 482 450 420 388 453 421 389 ...
            391 486 454 424 392 457 425 393 395 490 458 428 396 461 429 397 ...
            399 494 462 400 432 401 433 465 466 498 403 404 436 405 437 469 ...
            470 502 407 408 440 409 441 473 474 506 411 412 444 413 445 477 ...
            478 510 415 288 256 321 289 257 259 354 322 292 260 325 293 261 ...
            263 358 326 296 264 329 297 265 267 362 330 300 268 333 301 269 ...
            271 366 334 272 304 273 305 337 338 370 275 276 308 277 309 341 ...
            342 374 279 280 312 281 313 345 346 378 283 284 316 285 317 349 ...
            350 382 287 448 480 481 418 386 419 483 451 452 484 485 422 390 ...
            423 487 455 456 488 489 426 394 427 491 459 460 492 493 430 398 ...
            431 495 463 496 464 402 434 497 467 499 435 500 468 406 438 501 ...
            471 503 439 504 472 410 442 505 475 507 443 508 476 414 446 509 ...
            479 511 447 320 352 353 290 258 291 355 323 324 356 357 294 262 ...
            295 359 327 328 360 361 298 266 299 363 331 332 364 365 302 270 ...
            303 367 335 368 336 274 306 369 339 371 307 372 340 278 310 373 ...
            343 375 311 376 344 282 314 377 347 379 315 380 348 286 318 381 ...
            351 383 319] + 1;
  if ndims(data) == 3
      out_data = zeros(size(data));
      for k = 1:size(data, 3)
          out_data(:, :, k) = map_frame(data(:, :, k), daq_id);
      end
  else
      out_data = map_frame(data, daq_id);
  end
end

function out_frame = map_frame(frame, daq_id)
    % out_frame = zeros(size(frame));
    % for ci = 1:numel(daq_id)
    %     out_frame(:, ci) = frame(:, daq_id(ci));
    % end
    out_frame = frame(:, daq_id);
end
